   [schakelaars]
   /?, -h, -help, --help, -man geeft help weer
   -v, -ver geeft versie util weer

   [basic]
   cmdsqlite.exe <dbnaam> <query>
   voorbeeld: cmdsqlite.exe game.db "select name from game where name like 'a%'".

   cmdsqlite.exe <dbnaam> <.query>
   voorbeeld: cmdsqlite.exe game.db test.query
   voert de query in het bestand test.query uit

   [resultaten exporteren als]
   exporttype's: csv, html, json, sql, xml
   cmdsqlite.exe <dbname> <query> <exporttype>

   naar algemene sql:
   cmdsqlite.exe <filename>.csv
   tablenaam = bestandsnaam
   cmdsqlite.exe <bestandsnaam>.json
   tablenaam = bestandsnaam
   cmdsqlite.exe <bestandsnaam>.xml
   tablename = knooppuntrecord (momenteel slechts één knooppunt diep)

   maakt een <file>.sql
   kan worden geverifieerd en geïmporteerd in de database [import]
   sql maakt een sql tabelstructuur plus invoegingen

   cmdsqlite.exe <path> <filespec> <exporttype>
   voorbeeld: cmdsqlite.exe g:\data\mp3\70s *.mp3 html

   speciaal exporttype: cover
   voorbeeld: cmdsqlite.exe g:\data\mp3\70s *.mp3 cover
   exporteert album cover in mp3 indien aanwezig naar map 'cover
   genereert ook een rapport mp3cover.csv

   - gedeprecieerd
   gebruik map sjablonen : stel htmloutput = extra in conf.ini
   gebruik map sjablonen : htmluitvoer = standaard in conf.ini

   exporttype toevoegen: 'exif' als optionele vierde parameter
   voorbeeld: cmdsqlite.exe g:\data\images\paris *.jpg csv exif
   genereert rapport met
   breedte / hoogte in .jpg of .png indien aanwezig

   voorbeeld: cmdsqlite.exe g:\dataimages\paris *.jpg html exif
   bestandsspec *.jpg maakt imageviewer

   voorbeeld: cmdsqlite.exe g:\data\mp3\classic *.mp3 html exif
   bestandsspec *.mp3 krijgt tag info en maakt audio link aan

   geen vierde parameter terug naar standaard
   bestandsmetrische gegevens (bestand, bestandsgrootte, enz.)

   [import]
   naar sqlite database:
   cmdsqlite.exe <dbname> <.sql>

   maakt een database aan met <dbname>.db of importeert de
     tabel als de database al bestaat

   [util]
   cmdsqlite.exe <dbname> showtables
                  <dbname> showfields <tabelnaam>

   > conf/conf.ini <

   [toepassing]
   opties verbose, volledig
   logtype = volledig
   ' gebruikt voor debug bouwen
   usecons = false
   ' momenteel en, de, fr en nl
   taal = nl

   zet usecons op true voor feedback in console
   let op gebruik false bij gebruik van piping '>' resultaten
   naar een bestand

   > info <

   speciale opties:
   - toon tabellen in database
   <dbnaam> toon tabellen

   - toon velden in specifieke tabel
   <dbnaam> showfields <tabelnaam>

   - controleer of bestand bestaat volgens pad en bestand in opgegeven veld
   <dbname> <query> controleer bestand <veldnaam>
   checkfile geeft -1 terug als het bestand bestaat, anders nul 0

   cmdsqlite.exe game.db "selecteer naam, ontwikkelaar uit spel" html
   exporteert het resultaat van de query naar een tabel die in html kan worden gesorteerd (met behulp van sjablonen)

   cmdsqlite.exe game.db "select name, developer from game" json
   equivalent van:
   select json_object('naam', naam, 'ontwikkelaar', ontwikkelaar) from game" json

   cmdsqlite.exe game.db "selecteer naam, ontwikkelaar uit spel" csv
   exporteert het resultaat van de query naar een csv-bestand

   ondersteunde bestanden zijn .db

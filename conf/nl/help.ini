[schakelaars]
   /?, -h, -help, - -help, -man geeft hulp weer
   -v, -ver geeft een versie van de versie weer

   [uitgebreid]
   query:      cmdsqlite.exe <dbname> <query>
               cmdsqlite.exe <dbname> <bestandsnaam> .query
   import:     cmdsqlite.exe <dbname> <bestandsnaam> .sql
   exporteren: cmdsqlite.exe <dbname> <query> <exporttype>
               cmdsqlite.exe <path> <filespec> <exporttype>
               cmdsqlite.exe <path> <filespec> <exporttype> dekking
               cmdsqlite.exe <path> <filespec> <exporttype> exif
               cmdsqlite.exe <path> <filespec> <exporttype> fts
   util:       cmdsqlite.exe <dbname> showtables
               cmdsqlite.exe <dbname> showfields <tabelnaam>
               cmdsqlite.exe <dbname> <query> checkfile <veldnaam>
               cmdsqlite.exe <path> map
   catalogus:  cmdsqlite.exe <drive> catalogus <exporttype = sql>
   convert:    cmdsqlite.exe <path\file> .mht

   [basic]
   cmdsqlite.exe <dbname> <query>
   voorbeeld: cmdsqlite.exe game.db "selecteer naam uit game waar naam als 'a%'"

   cmdsqlite.exe <dbname> <bestandsnaam> .query
   voorbeeld: cmdsqlite.exe game.db test.query
   voert de query uit in test.query -bestand

   [exporteren]
   exporttype's: csv, html, json, sql, xml
   cmdsqlite.exe <dbname> <query> <exporttype>

   naar generieke sql:
   cmdsqlite.exe <bestandnaam> .csv
   cmdsqlite.exe <bestandsnaam> .json
   tablename = bestandsnaam
   cmdsqlite.exe <bestandnaam> .xml
   tablename = node record (momenteel slechts één knooppunt diep)

   cmdsqlite.exe <drive:\path> *. <filetype> <exporttype>

   optionele parameter: fts
   creëert een virtuele of volledige tekstzoektabel defenitie
   voorbeeld: cmdsqlite.exe <bestandsnaam> .json fts
   opmerking: tokenisatie niet ondersteund ...

   voorbeeld: cmdsqlite.exe <bestandnaam> .json> <bestandsnaam> .sql
   creëert een <bestandsnaam> .sql
   die sql -tabelstructuur plus inzetstukken bevat
   kan worden geverifieerd en vervolgens worden geïmporteerd in de database

   cmdsqlite.exe <path> <filespec> <exporttype>
   voorbeeld: cmdsqlite.exe g:\data\mp3\70s *.mp3 html

   special exporttype: cover
   voorbeeld: cmdsqlite.exe g:\data\mp3\70s *.mp3 cover
   exporteert albumhoes in mp3 if present to folder 'cover'
   genereert ook een rapport mp3cover.csv

   supplement exporttype: 'exif' als optionele vierde parameter
   voorbeeld: cmdsqlite.exe g:\data\images\paris *.jpg csv exif
   genereert rapport met:
   oriëntatie, breedte, hoogte, bestanden en miniatuur aanwezig
   van .jpg of .png indien aanwezig

   voorbeeld: cmdsqlite.exe g:\data\afbeeldingen\paris *.jpg html exif
   filespec *.jpg maakt imageviewer

   voorbeeld: cmdsqlite.exe g:\data\mp3\classic *.mp3 html exif
   filespec *.mp3 krijgt tag -info en maakt audiokoppeling
   opmerking: het laatste deel van het pad wordt toegevoegd als thema

   exporteer bestand en maplijst
   voorbeeld cmdsqlite.exe f:\dev *.txt sql

   opmerking: geen vierde parameter keert terug naar standaard
   bestandsmatrische gegevens (bestand, bestanden, enz.)

   [importeren]
   naar sqlite -database:
   cmdsqlite.exe <dbname> <bestandsnaam> .sql

   ! maakt een database met behulp van <dbname> .db of importeert
     tabel als de database al uitlegt

   [util]
   cmdsqlite.exe <dbname> showtables
                 <dbname> showfields <table name>
                 <dbname> <query> checkfile <veldnaam>
                 <path> mapinfo
                 'toon metrische info drive en mappen in het pad

   [overzetten]
   .mht -bestanden worden geconverteerd naar .txt en .html
   gebruik: <bestandsnaam> .mht
   voorbeeld: cmdsqlite.exe g:\data\text\demo.mht
   maakt een map <bestandsnaam> en extraheert alle bestanden in de .mht
   plus converteert de belangrijkste .html naar een sperideword -gewapend tekstbestand.

   [catalogus]
   catalogus metrische gegevens van de map op het schijf
   tabelarchief: label, capaciteit, ruimte, mappenize
   tabelgegevens: label, map, gegevens, maat
   voorbeeld: cmdsqlite.exe e:\catalogus sql
            cmdsqlite.exe <drive> catalogus <exporttype = sql>

   de resulterende sql kan worden geïmporteerd in een database
   opmerking: om praktische redenen moet het aandrijvingslabel uniek zijn
         beide tabel -defnities voor archief en gegevens worden gemaakt
         twee keer, om de database te initaliseren en eenmaal voor het verwijderen
         oude gegevens, als de schijf eerder werd gecatalogiseerd.

   > conf/conf.ini <

   [sollicitatie]
   'opties uitgebreid, vol
   logtype = vol
   'gebruikt voor foutopsporingsbuild
   usecons = false
   'momenteel en, de, fr en nl
   locale = en

   ! stel usecons in op true voor feedback in consolse
     opmerking gebruik false bij het gebruik van leidingen '>' resultaten
     naar een bestand

   > voorbeelden en info <

   verfiy als het bestand zich uittrekt volgens het pad en het bestand in het opgegeven veld
   <dbname> <query> checkfile <veldnaam>
   checkfile retourneert -1 als het bestand bestaat, anders nul 0

   cmdsqlite.exe game.db "selecteer naam, ontwikkelaar uit game" html
   exporteert queryresultaat naar een html -sorteerbare tabel (met behulp van sjablonen)

   cmdsqlite.exe game.db "selecteer naam, ontwikkelaar uit game" json
   gelijkwaardig van:
   selecteer json_object ('name', name, 'developer', developer) uit game "json

   cmdsqlite.exe game.db "selecteer naam, ontwikkelaar uit game" csv
   exporteert queryresultaat naar een csv -bestand

   terugvragen van tafels met een koppelteken / min ex. tabelnaam gebruik 'tabelnaam'
   "selecteer naam, ontwikkelaar uit 'game-with-hyphen'" "
   
   zie: tutorials in gegevensmap voor meer onafhankelijke info
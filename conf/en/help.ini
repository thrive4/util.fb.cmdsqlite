   [switches]
   /?, -h, -help, --help, -man displays help
   -v, -ver                    displays version util

   [basic]
   cmdsqlite.exe <dbname> <query>
   example: cmdsqlite.exe game.db "select name from game where name like 'a%'"

   cmdsqlite.exe <dbname> <.query>
   example: cmdsqlite.exe game.db test.query
   runs the query contained in test.query file

   [export results as]
   exporttype's: csv, html, json, sql, xml
   cmdsqlite.exe <dbname> <query> <exporttype>

   to generic sql:
   cmdsqlite.exe <filename>.csv
   tablename = filename
   cmdsqlite.exe <filename>.json
   tablename = filename
   cmdsqlite.exe <filename>.xml
   tablename = node record (currently only one node deep)

   ! creates a <file>.sql
     which contains sql table structure plus inserts
     can be verified and the imported to database

   cmdsqlite.exe <path> <filespec> <exporttype>
   example: cmdsqlite.exe g:\data\mp3\70s *.mp3 html

   special exporttype: cover
   example: cmdsqlite.exe g:\data\mp3\70s *.mp3 cover
   exports album cover in mp3 if present to folder 'cover'
   also generates a report mp3cover.csv

   - deprectated
   ! using folder templates : set htmloutput = extra in conf.ini
   ! using folder templates : set htmloutput = default in conf.ini

   supplement exporttype: 'exif' as optional fourth parameter
   example: cmdsqlite.exe g:\data\images\paris *.jpg csv exif
   generates report with
   width / height in .jpg or .png if present

   example: cmdsqlite.exe g:\data\images\paris *.jpg html exif
   filespec *.jpg creates imageviewer

   example: cmdsqlite.exe g:\data\mp3\classic *.mp3 html exif
   filespec *.mp3 gets tag info and creates audio link

   no fourth parameter reverts to default
   file metric data (file, filesize, etc)

   [import]
   to sqlite database:
   cmdsqlite.exe <dbname> <.sql>

   ! creates a database using <dbname>.db or imports the
     table if the database already excists

   [util]
   cmdsqlite.exe <dbname> showtables
                  <dbname> showfields <table name>
                  <dbname> <query> checkfile <field name>

   [convert]
   .mht files are converted to .txt and .html
   usage: <filename>.mht
   example: cmdsqlite.exe g:\data\text\demo.mht
   creates a folder <filename> and extracts all files in the .mht
   plus converts the main .html to a sperate wordwrapped text file.

   > conf/conf.ini <

   [application]
   ' options verbose, full
   logtype         = full
   ' used for debug build
   usecons         = false
   ' currently en, de, fr and nl
   locale          = en

   ! set usecons to true for feedback in consolse
     note use false when using piping '>' results
     to a file

   > info <

   special options:
   - showtables in database
   <dbname> showtables

   - showfields in specific table
   <dbname> showfields <table name>

   - verfiy if file excists according to path and file in specified field
   <dbname> <query> checkfile <field name>
   checkfile returns -1 if the file exists, otherwise zero 0

   cmdsqlite.exe game.db "select name, developer from game" html
   exports query result to an html sortable table (using templates)

   cmdsqlite.exe game.db "select name, developer from game" json
   equivelent of:
   select json_object('name', name, 'developer', developer) from game" json

   cmdsqlite.exe game.db "select name, developer from game" csv
   exports query result to a csv file

   supported files are .db
